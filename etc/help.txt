-------------------------
-----  FOEDAG HELP  -----
-------------------------
Options:
   --help           : This help
   --version        : Version
   --batch          : Tcl only, no GUI
   --replay <script>: Replay GUI test
   --script <script>: Execute a Tcl script
   --project <project file>: Open a project
   --compiler <name>: Compiler name {openfpga...}, default is a dummy compiler
   --mute           : Mutes stdout in batch mode
Tcl commands:
   help                       : This help
   create_design <name> ?-type <project type>? : Creates a design with <name> name
   close_design     : Close current design
               <project type> : rtl, gate-level
   open_project <file>        : Opens a project in started upfront GUI
   run_project <file>         : Opens and immediately runs the project
   add_design_file <file list> ?type?   ?-work <libName>?  
              Each invocation of the command compiles the file list into a compilation unit 
                       <type> : -VHDL_1987, -VHDL_1993, -VHDL_2000, -VHDL_2008, -V_1995, -V_2001, -SV_2005, -SV_2009, -SV_2012, -SV_2017> 
              -work <libName> : Compiles the compilation unit into library <libName>, default is "work"
   add_simulation_file <file list> ?type?   ?-work <libName>?  
              Each invocation of the command compiles the file list into a compilation unit 
                       <type> : -VHDL_1987, -VHDL_1993, -VHDL_2000, -VHDL_2008, -V_1995, -V_2001, -SV_2005, -SV_2009, -SV_2012, -SV_2017, -C, -CPP> 
              -work <libName> : Compiles the compilation unit into library <libName>, default is "work"
   clear_simulation_files     : Remove all simulation files
   read_netlist <file>        : Read a netlist instead of an RTL design (Skip Synthesis)
   add_include_path <path1>...: As in +incdir+
   add_library_path <path1>...: As in +libdir+
   add_library_ext <.v> <.sv> ...: As in +libext+
   set_macro <name>=<value>...: As in -D<macro>=<value>
   set_top_module <top> ?-work <libName>? : Sets the top module
   add_constraint_file <file> : Sets SDC + location constraints
     Constraints: set_pin_loc, set_region_loc, all SDC commands
   script_path                : path of the Tcl script passed with --script
   add_litex_ip_catalog <directory> : Browses directory for LiteX IP generators, adds the IP(s) to the IP Catalog
   ip_catalog ?<ip_name>?     : Lists all available IPs, and their parameters if <ip_name> is given 
   ip_configure <IP_NAME> -mod_name <name> -out_file <filename> -version <ver_name> -P<param>="<value>"...
                              : Configures an IP <IP_NAME> and generates the corresponding file with module name
   ipgenerate ?clean? ?-modules {moduleName1 moduleName2} : Generates all IP instances set by ip_configure. -modules limits which IPs are generated.
   simulate_ip  <module name> : Simulate IP with module name <module name>
   synthesize <optimization> ?clean? : Optional optimization (area, delay, mixed, none)
   place ?clean
   pin_loc_assign_method <Method>: (in_define_order(Default)/random/free)
   synth_options <option list>: Synthesis Options
   pnr_options <option list>  : PnR Options
     clb_packing <directive>  : Performance optimization flags
                 <directive>  : auto, dense
                        auto  : CLB packing automatically determined to optimize performance
                       dense  : Pack logic more densely into CLBs resulting in fewer utilized CLBs however may negatively impact timing
   packing ?clean?
   place ?clean?
   route ?clean?
   sta ?clean?
   power ?clean?
   bitstream ?clean? ?enable_simulation? ?write_xml? ?write_fabric_independent? ?pb_pin_fixup?
   simulate <level> ?<simulator>? ?clean? : Simulates the design and testbench
             <level>: rtl, gate, pnr, bitstream_bd, bitstream_fd.
                 rtl: RTL simulation,
                gate: post-synthesis simulation,
                 pnr: post-pnr simulation,
        bitstream_bd: Back-door bitstream simulation
        bitstream_fd: Front-door bitstream simulation
        <simulator> : verilator, vcs, questa, icarus, ghdl, xcelium
   diagnostic <type>: Debug mode. Types: packer
   chatgpt <command> "<message>" ?-c <path>?: Send message to ChatGPT
                    <command> : Support two commands: send and reset
                         send : Send message
                        reset : Reset history
                    -c <path> : Specify ini file path with API key. The key needs to be set only once for a session
                                [OpenAI]
                                API_KEY: <api key>
   wave_*               : All wave commands will launch a GTKWave process if one hasn't been launched already. Subsequent commands will be sent to the launched process.
   wave_cmd ...         : Sends given tcl commands to GTKWave process. See GTKWave docs for gtkwave:: commands.
   wave_open <filename> : Load given file in current GTKWave process.
   wave_refresh         : Reloads the current active wave file
   wave_show <signal>   : Add the given signal to the GTKWave window and highlight it.
   wave_time <time>     : Set the primary marker to <time>. Time units can be specified, without a space. Ex: wave_time 100ps.
-------------------------
